name: Build & Upload Next

on:
  push:
    branches: main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      S3_BUCKET:  ${{ vars.S3_BUCKET }}
      AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - run: corepack enable && pnpm i --frozen-lockfile

      - name: Build Next
        run: pnpm build
        env:
          NEXT_PUBLIC_API_URL:  https://staging-gateway.socinpro.org.br
          NEXT_PUBLIC_SITE_URL: https://socinpro.org.br

      - name: Valida se standalone existe
        run: test -f .next/standalone/server.js || (echo "❌ Standalone not found. Configure output:'standalone' in next.config.mjs" && exit 1)

      - name: Package artifact
        run: |
          rm -rf artifact
          mkdir -p artifact/standalone
          cp -r .next/standalone artifact/
          cp -r .next/static artifact/standalone/.next/static
          cp -r public artifact/standalone/public || true
          # Cria o .tgz no diretório raiz do workspace
          tar --warning=no-file-changed -czf next-standalone-$GITHUB_SHA.tgz -C artifact standalone

      - name: Validate tar content
        run: |
          tar -tf next-standalone-$GITHUB_SHA.tgz | grep -q 'standalone/server.js' || (echo "server.js não encontrado no pacote" && exit 1)

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region:     ${{ env.AWS_REGION }}

      - name: WhoAmI #Verifica o ARN assumido
        run: aws sts get-caller-identity

      - name: Validate tar content
        run: |
          tar -tf next-standalone-$GITHUB_SHA.tgz standalone/server.js >/dev/null 2>&1 \
            || (echo "server.js não encontrado no pacote" && exit 1)

      - name: Upload para S3 (releases/)
        run: aws s3 cp next-standalone-$GITHUB_SHA.tgz s3://$S3_BUCKET/releases/

